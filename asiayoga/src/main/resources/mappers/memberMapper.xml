<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.company.asiayoga.mapper.memberMapper">
  
  	<sql id="commomPaging">
  		LIMIT #{totalRow} OFFSET #{paramPage};
  	</sql>
  
	<!-- 회원 목록  -->
	<select id="memberList" parameterType="memberVO" resultType="memberVO">
  		/* memberMapper.memberList */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				mbinfo.member_seq,
				mbinfo.name,
	            mbinfo.sex,
	            mbinfo.phone,
	            mbinfo.email,
	            mbinfo.birth,
	            mbinfo.memo,
	            mbinfo.store_seq,
	            ( SELECT store_name FROM storeinfo WHERE store_seq = mbinfo.store_seq) AS store_name,
	            mbinfo.register_date,
	            mbinfo.adjournment_state
		FROM memberinfo mbinfo , (SELECT @ROWNUM :=0) AS R
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mbinfo.store_seq = #{storeSeq}
			</when>
			<otherwise></otherwise>
		</choose>
		AND mbinfo.del_yn = 'N'
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mbinfo.name LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.birth LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.phone LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.email LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
	    ORDER BY mbinfo.register_date DESC, row_num DESC
	    <include refid="commomPaging"/>
	</select>
	
	<!-- 회원 목록 갯수  -->
	<select id="memberTotalCount" parameterType="memberVO" resultType="int">
  		/* memberMapper.memberTotalCount */
		SELECT count(*)
		FROM memberinfo mbinfo
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mbinfo.store_seq = #{storeSeq}
			</when>
			<otherwise></otherwise>
		</choose>
		AND mbinfo.del_yn = 'N'
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mbinfo.name LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.birth LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.phone LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.email LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
	</select>
	
	<!-- 회원 정보 상세  -->
	<select id="memberDetail" parameterType="memberVO" resultType="memberVO">
  		/* memberMapper.memberDetail */
		SELECT	member_seq,
				name,
	            sex,
	            phone,
	            email,
	            birth,
	            memo,
	            store_seq,
	            register_date,
	            ( SELECt store_name FROM storeinfo WHERE store_seq = #{storeSeq} ) AS store_name
		FROM memberinfo
	    WHERE member_seq = #{memberSeq}
	    AND store_seq = #{storeSeq}
	</select>
	
	
	<!-- 회원 정보 등록  -->
	<insert id="memberInsert" parameterType="memberVO">
  		/* memberMapper.memberInsert */
		INSERT INTO memberinfo
				(	name,
				 	sex,
					birth,
					phone,
					email,
					memo,
					store_seq,
					register_date,
					register_id,
					modify_date,
					modify_id,
					del_yn
				)
		VALUES
				(
					#{name},
					#{sex},
					#{birth},
					#{phone},
					#{email},
					#{memo},
					#{storeSeq},
					#{registerId},
					#{registerId}
					'N'
				)
	</insert>
	
	<!-- 회원 정보 삭제  -->
	<update id="memberDel" parameterType="memberVO">
  		/* memberMapper.memberDel */
  		UPDATE memberinfo 
  		SET del_yn = 'Y',
  			modify_date = now(),
  			modify_id = #{modifyId}
  		WHERE member_seq = #{memberSeq}
  		AND store_seq = #{storeSeq} 
	</update>
	
	
	<!-- 회원 정보 업데이트  -->
	<update id="memberEdit" parameterType="memberVO">
  		/* memberMapper.memberEdit */
  		UPDATE memberinfo 
  		<set>
  			<if test="name != null and name != ''">name = #{name},</if>
  			<if test="sex != null and sex != ''">sex = #{sex},</if>
  			<if test="birth != null and birth != ''">birth = #{birth},</if>
  			<if test="phone != null and phone != ''">phone = #{phone},</if>
  			<if test="email != null and email != ''">email = #{email},</if>
  			<if test="memo != null and memo != ''">memo = #{memo},</if>
  			modify_date= now(),
  			modify_id = #{modifyId}
  		</set> 
  		WHERE member_seq = #{memberSeq}
  		AND store_seq = #{storeSeq}
  		AND del_yn ='N' 
	</update>
	
	
	<!--  회원 정보 검색(List 로 리턴, 상품과 함께 정보 제공)   -->
	<select id="memberSearchList" parameterType="memberVO" resultType="memberVO">
  		/* memberMapper.memberSearchList */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				mbinfo.member_seq,
				mbinfo.name,
	            mbinfo.sex,
	            mbinfo.phone,
	            mbinfo.email,
	            mbinfo.birth,
	            mbinfo.memo,
	            mbinfo.store_seq,
	            ( SELECT store_name FROM storeinfo WHERE store_seq= mbinfo.store_seq ) AS store_name,
	            mbinfo.register_date,
	            ordinfo.order_seq,
            	ordinfo.product_count,
                ordinfo.remaining_count,
                prdinfo.product_seq,
				prdinfo.product_name,
				( SELECT item_name FROM productitem WHERE item_seq = prdinfo.item_seq ) AS item_name
		FROM memberinfo mbinfo
        INNER JOIN orderinfo ordinfo
        ON mbinfo.member_seq = ordinfo.member_seq
        INNER JOIN productinfo prdinfo
    	ON ordinfo.product_seq = prdinfo.product_seq
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mbinfo.store_seq = #{storeSeq}
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mbinfo.name LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.phone LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.email LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
		AND mbinfo.del_yn = 'N'
        AND ordinfo.expiration_yn = 'N'
        AND ordinfo.del_yn = 'N'
	    ORDER BY mbinfo.register_date DESC, row_num DESC;
	</select>
	
	<!-- 검색 조건 팝업 창에서의 회원 목록  -->
	<select id="searchMemberList" parameterType="memberVO" resultType="memberVO">
  		/* memberMapper.searchMemberList */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				member_seq,
				name,
	            sex,
	            phone,
	            email,
	            birth,
	            memo,
	            store_seq,
	            register_date
		FROM memberinfo , (SELECT @ROWNUM :=0) AS R
		WHERE store_seq = #{storeSeq}
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		name LIKE CONCAT('%',#{searchWord},'%')
				OR 	birth LIKE CONCAT('%',#{searchWord},'%')
				OR 	phone LIKE CONCAT('%',#{searchWord},'%')
				OR 	email LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
		AND del_yn = 'N'
	    ORDER BY register_date DESC, row_num DESC
	</select>
	
	<!-- 회원 목록 , 엑셀 다운로드 시 쓰인다.  -->
	<select id="memberExcelDown" parameterType="memberVO" resultType="memberVO">
  		/* memberMapper.memberExcelDown */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				mbinfo.member_seq,
				mbinfo.name,
	            mbinfo.sex,
	            mbinfo.phone,
	            mbinfo.email,
	            mbinfo.birth,
	            mbinfo.memo,
	            mbinfo.store_seq,
	            mbinfo.register_date,
	            mbinfo.adjournment_state
		FROM memberinfo mbinfo, (SELECT @ROWNUM :=0) AS R
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mbinfo.store_seq = #{storeSeq}
			</when>
			<otherwise></otherwise>
		</choose>
		AND mbinfo.del_yn = 'N'
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mbinfo.name LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.birth LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.phone LIKE CONCAT('%',#{searchWord},'%')
				OR 	mbinfo.email LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
	    ORDER BY mbinfo.register_date DESC, row_num DESC
	</select>
	
	<!-- 회원 휴회 상태 변경  -->
	<update id="updateAdjournmentState" parameterType="memberVO">
  		/* memberMapper.updateAdjournmentState */
  		UPDATE memberinfo 
  		SET adjournment_state = #{adjournmentState},
  			modify_date = now(),
  			modify_id = #{modifyId}
  		WHERE member_seq = (SELECT member_seq FROM orderinfo WHERE order_seq =#{orderSeq} AND del_yn = 'N' LIMIT 1)
  		AND store_seq = (SELECT store_seq FROM orderinfo WHERE order_seq =#{orderSeq} AND del_yn = 'N' LIMIT 1) 
	</update>
	
  </mapper>