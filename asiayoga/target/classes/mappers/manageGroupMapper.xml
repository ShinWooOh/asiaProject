<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.company.asiayoga.mapper.manageGroupMapper">
 
 	<sql id="commomPaging">
  		LIMIT #{totalRow} OFFSET #{paramPage};
  	</sql>
 
	<!-- 직원 그룹 목록  -->
 	<select id="manageGroupList" parameterType="manageGroupVO" resultType="manageGroupVO">
 		/* manageGroupMapper.manageGroupList */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				mnggrp.manage_group_seq,
				mnggrp.authority,
				CASE WHEN mnggrp.authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN mnggrp.authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN mnggrp.authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
				mnggrp.group_name,
				mnggrp.store_seq,
				stinfo.store_name,
				mnggrp.register_date,
				mnggrp.register_id,
				mnggrp.modify_date, 
				mnggrp.modify_id,
				mnggrp.use_yn
		FROM managegroup mnggrp	
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN storeinfo stinfo
		ON mnggrp.store_seq = stinfo.store_seq
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mnggrp.store_seq = #{storeSeq}
				AND mnggrp.authority NOT IN ('ROLE_ADMIN')
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mnggrp.group_name LIKE CONCAT('%',#{searchWord},'%')
				OR 	stinfo.store_name LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
		ORDER BY mnggrp.modify_date DESC
		<include refid="commomPaging"/>
	</select>
	
	<!-- 직원 그룹 목록  -->
 	<select id="manageGroupListAll" parameterType="manageGroupVO" resultType="manageGroupVO">
 		/* manageGroupMapper.manageGroupListAll */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				mnggrp.manage_group_seq,
				mnggrp.authority,
				CASE WHEN mnggrp.authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN mnggrp.authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN mnggrp.authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
				mnggrp.group_name,
				mnggrp.store_seq,
				stinfo.store_name,
				mnggrp.register_date,
				mnggrp.register_id,
				mnggrp.modify_date, 
				mnggrp.modify_id,
				mnggrp.use_yn
		FROM managegroup mnggrp	
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN storeinfo stinfo
		ON mnggrp.store_seq = stinfo.store_seq
		WHERE mnggrp.store_seq = #{storeSeq}
		ORDER BY mnggrp.modify_date DESC
	</select>
	
	<!-- 직원 그룹 목록 갯수 -->
 	<select id="manageGroupTotalCount" parameterType="manageGroupVO" resultType="int">
 		/* manageGroupMapper.manageGroupTotalCount */
		SELECT	COUNT(*)
		FROM managegroup mnggrp
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN storeinfo stinfo
		ON mnggrp.store_seq = stinfo.store_seq
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mnggrp.store_seq = #{storeSeq}
				AND mnggrp.authority NOT IN ('ROLE_ADMIN')
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mnggrp.group_name LIKE CONCAT('%',#{searchWord},'%')
				OR 	stinfo.store_name LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
	</select>
	
	<!-- 직원 그룹 활성화 여부 변경   -->
 	<update id="updateGroupUseYnState" parameterType="manageGroupVO">
 		/* manageGroupMapper.updateGroupUseYnState */
		UPDATE managegroup
		SET use_yn = #{useYn},
			modify_date = now(),
			modify_id = #{modifyId}
		WHERE manage_group_seq = #{manageGroupSeq}
	</update>
	
	<!-- 계정 중복 여부 확인   -->
 	<select id="manageGroupDupCheck" resultType="manageGroupVO">
 		/* manageGroupMapper.manageGroupDupCheck */
		SELECT	manage_group_seq,
				group_name
		FROM	managegroup
		WHERE	group_name = #{groupName}
		AND		store_seq = #{storeSeq}
		AND 	use_yn = 'Y' 
	</select>
	
	<!-- 직원 그룹 등록  -->
	<insert id="insertManageGroup" parameterType="manageGroupVO">
 		/* manageGroupMapper.insertManageGroup */
 		INSERT INTO managegroup
 				(	authority,
 					group_name,
 					store_seq,
 					register_id,
 					modify_id
 				)
 		VALUES	(	#{authority},
 					#{groupName},
 					#{storeSeq},
 					#{registerId},
 					#{modifyId}
 				)
	</insert>
    
    <!-- 직원 그룹 상세  -->
 	<select id="manageGroupDetail" parameterType="manageGroupVO" resultType="manageGroupVO">
 		/* manageGroupMapper.manageGroupDetail */
		SELECT	mnggrp.manage_group_seq,
				mnggrp.authority,
				CASE WHEN mnggrp.authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN mnggrp.authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN mnggrp.authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
				mnggrp.group_name,
				mnggrp.store_seq,
				( SELECT store_name FROM storeinfo WHERE store_seq = mnggrp.store_seq ) AS store_name,
				mnggrp.register_date,
				mnggrp.register_id,
				mnggrp.modify_date, 
				mnggrp.modify_id,
				mnggrp.use_yn
		FROM managegroup mnggrp
		WHERE mnggrp.manage_group_seq =#{manageGroupSeq}
	</select>

	<!-- 직원 그룹 수정   -->
 	<update id="updateManageGroup" parameterType="manageGroupVO">
 		/* manageGroupMapper."updateManageGroup" */
		UPDATE managegroup
		SET authority = #{authority},
			group_name = #{groupName},
			modify_date = now(),
			modify_id = #{modifyId}
		WHERE manage_group_seq = #{manageGroupSeq}
	</update>
	
	<!-- 직원 그룹 리스트 엑셀 다운로드  -->
 	<select id="manageGroupExcelDownload" parameterType="manageGroupVO" resultType="manageGroupVO">
 		/* manageGroupMapper.manageGroupExcelDownload */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				mnggrp.manage_group_seq,
				mnggrp.authority,
				CASE WHEN mnggrp.authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN mnggrp.authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN mnggrp.authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
				mnggrp.group_name,
				mnggrp.store_seq,
				stinfo.store_name
		FROM managegroup mnggrp	
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN storeinfo stinfo
		ON mnggrp.store_seq = stinfo.store_seq
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mnggrp.store_seq = #{storeSeq}
				AND mnggrp.authority NOT IN ('ROLE_ADMIN')
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mnggrp.group_name LIKE CONCAT('%',#{searchWord},'%')
				OR 	stinfo.store_name LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
		ORDER BY mnggrp.modify_date DESC
	</select>
	
	<!-- 매장명 검색 후 직원 그룹 목록 리스트  -->
 	<select id="searchGroupList" parameterType="manageGroupVO" resultType="manageGroupVO">
 		/* manageGroupMapper.searchGroupList */
		SELECT	@ROWNUM:=@ROWNUM+1 as row_num,
				mnggrp.manage_group_seq,
				mnggrp.authority,
				CASE WHEN mnggrp.authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN mnggrp.authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN mnggrp.authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
				mnggrp.group_name,
				mnggrp.store_seq,
				stinfo.store_name,
				mnggrp.use_yn
		FROM managegroup mnggrp	
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN storeinfo stinfo
		ON mnggrp.store_seq = stinfo.store_seq
		WHERE mnggrp.store_seq = #{storeSeq}
		AND mnggrp.use_yn = 'Y'
		ORDER BY mnggrp.modify_date DESC
	</select>
</mapper>
