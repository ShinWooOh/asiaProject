<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.company.asiayoga.mapper.manageMapper">

	<sql id="commomPaging">
  		LIMIT #{totalRow} OFFSET #{paramPage};
  	</sql>
 
 	<select id="selectUserById" resultType="customUserDetail">
 		/* manageMapper.selectUserById */
		SELECT 	manage_seq,
				id,
				passwd,
				name,
				authority,
				enabled,
				store_seq,
				use_yn
		FROM MANAGEINFO 
		WHERE id = #{id}
	</select>
	
	<!-- 로그인 실패 시 횟수 추가 -->
	<update id="updateFailureCount">
 		/* manageMapper.updateFailureCount */
 		UPDATE MANAGEINFO
 		SET failure_count = failure_count +1
 		WHERE id = #{id}
	</update>
	
	<!-- 실패 횟수 체크  -->
	<select id="checkFailureCount" resultType="Integer">
 		/* manageMapper.checkFailureCount */
 		SELECT	failure_count
 		FROM MANAGEINFO
 		WHERE id = #{id}
	</select>
    
	<!-- 로그인 3회 이상 실패 시 비 활성화로 변경 -->
	<update id="updateEnabled">
 		/* manageMapper.updateEnabled */
 		UPDATE MANAGEINFO
 		SET enabled = false
 		WHERE id = #{id}
	</update>
	
	<!-- 로그인 실패 횟수 초기화 -->
	<update id="updateFailureCountReset">
 		/* manageMapper.updateFailureCountReset */
 		UPDATE MANAGEINFO
 		SET failure_count = 0
 		WHERE id = #{id}
	</update>
	
	<!-- 로그인 시 접속 날자 업데이트 -->
	<update id="updateAccessDate">
 		/* manageMapper.updateAccessDate */
 		UPDATE MANAGEINFO
 		SET access_date = now(),
 			modify_date = now(),
 			modify_id = #{id}
 		WHERE id = #{id}
	</update>
	
	<!-- 로그인 한 관리자 사용 정보  -->
 	<select id="manageDetail" resultType="manageVO">
 		/* manageMapper.manageDetail */
		SELECT 	mginfo.manage_seq,
				mginfo.id,
				mginfo.passwd,
				mginfo.name,
				mginfo.authority,
				mginfo.enabled,
				mginfo.store_seq,
				( SELECT store_name FROM STOREINFO WHERE store_seq = mginfo.store_seq ) AS store_name,
				use_yn
		FROM MANAGEINFO mginfo
		WHERE id = #{id}
	</select>
	
	<!-- 매장 직원 목록  -->
 	<select id="manageList" resultType="manageVO">
 		/* manageMapper.manageList */
		SELECT 	@ROWNUM:=@ROWNUM+1 as row_num,
				mginfo.manage_seq,
				mginfo.id,
				mginfo.passwd,
				mginfo.name,
				mginfo.authority,
                CASE WHEN mginfo.authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN mginfo.authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN mginfo.authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
                CASE WHEN mginfo.authority = 'ROLE_ADMIN' THEN '관리자'
                     ELSE mnggrp.group_name
				END AS group_name,
				mginfo.access_date,
				mginfo.enabled,
				mginfo.store_seq,
				( SELECT store_name FROM STOREINFO WHERE store_seq = mginfo.store_seq ) AS store_name,
				mginfo.use_yn
		FROM MANAGEINFO mginfo
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN MANAGEGROUP mnggrp
		ON mginfo.manage_group_seq = mnggrp.manage_group_seq
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mginfo.store_seq = #{storeSeq}
				AND mginfo.authority NOT IN ('ROLE_ADMIN')
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mginfo.name LIKE CONCAT('%',#{searchWord},'%')
				OR 	mnggrp.group_name LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
		ORDER BY mginfo.store_seq DESC
		<include refid="commomPaging"/>
	</select>
	
 	<select id="manageTotalCount"  parameterType="manageVO" resultType="int">
 		/* manageMapper.manageTotalCount */
		SELECT 	COUNT(*)
		FROM MANAGEINFO mginfo
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN MANAGEGROUP mnggrp
		ON mginfo.manage_group_seq = mnggrp.manage_group_seq
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mginfo.store_seq = #{storeSeq}
				AND mginfo.authority NOT IN ('ROLE_ADMIN')
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mginfo.name LIKE CONCAT('%',#{searchWord},'%')
				OR 	mnggrp.group_name LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
	</select>
	
	<!-- 직원 계정 활성화 여부 변경   -->
 	<update id="updateEnableState" parameterType="manageVO">
 		/* manageMapper.updateEnableState */
		UPDATE MANAGEINFO
		SET enabled = #{enabled},
			modify_date = now(),
			modify_id = #{id}
		WHERE manage_seq = #{manageSeq}
	</update>
	
	<!-- 계정 중복 여부 확인   -->
 	<select id="manageDupIdCheck" resultType="manageVO">
 		/* manageMapper.manageDupIdCheck */
		SELECT	manage_seq,
				id,
				name,
				authority
		FROM	MANAGEINFO
		WHERE	id = #{id} 
	</select>
	
	<!-- 직원 등록  -->
	<insert id="insertManage" parameterType="manageVO">
 		/* manageMapper.insertManage */
 		INSERT INTO MANAGEINFO
 				(	id,
 					passwd,
 					name,
 					phone,
 					manage_group_seq,
 					memo,
 					store_seq,
 					authority,
 					register_id,
 					modify_id
 				)
 		VALUES	(
 					#{id},
 					#{passwd},
 					#{name},
 					#{phone},
 					#{manageGroupSeq},
 					#{memo},
 					#{storeSeq},
 					( SELECT authority FROM MANAGEGROUP WHERE manage_group_seq = #{manageGroupSeq}),
 					#{registerId},
 					#{modifyId}
 				)
	
	</insert>

	<!-- 직원 정보   -->
 	<select id="manageInfo" resultType="manageVO">
 		/* manageMapper.manageInfo */
		SELECT	manage_seq,
				id,
				passwd,
				name,
				phone,
				authority,
                CASE WHEN authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
				manage_group_seq,
				access_date,
				memo,
				use_yn
		FROM	MANAGEINFO
		WHERE	manage_seq = #{manageSeq} 
	</select>
	
	<!-- 직원 정보 업데이트   -->
 	<update id="updateManage" parameterType="manageVO">
 		/* manageMapper.updateManage */
		UPDATE	MANAGEINFO
		SET	name = #{name},
			phone = #{phone},
			manage_group_seq = #{manageGroupSeq},
			memo = #{memo},
			modify_date = now(),
			modify_id = #{modifyId}
		WHERE	manage_seq = #{manageSeq} 
	</update>
	
	<!-- 매장 직원 목록  -->
 	<select id="manageExcelDownload" resultType="manageVO">
 		/* manageMapper.manageExcelDownload */
		SELECT 	@ROWNUM:=@ROWNUM+1 as row_num,
				mginfo.manage_seq,
				mginfo.id,
				mginfo.passwd,
				mginfo.name,
				mginfo.authority,
                CASE WHEN mginfo.authority = 'ROLE_ADMIN' THEN '관리자'
					 WHEN mginfo.authority = 'ROLE_MANAGER' THEN '매장관리자'
                     WHEN mginfo.authority = 'ROLE_STAFF' THEN '직원'
                     ELSE '기타'
				END AS authority_name,
                CASE WHEN mginfo.authority = 'ROLE_ADMIN' THEN '관리자'
                     ELSE mnggrp.group_name
				END AS group_name,
				mginfo.access_date,
				mginfo.enabled,
				mginfo.store_seq,
				( SELECT store_name FROM STOREINFO WHERE store_seq = mginfo.store_seq ) AS store_name,
				mginfo.use_yn
		FROM MANAGEINFO mginfo
		INNER JOIN (SELECT @ROWNUM :=0) AS R
		INNER JOIN MANAGEGROUP mnggrp
		ON mginfo.manage_group_seq = mnggrp.manage_group_seq
		WHERE 1=1
		<choose>
			<when test="authority != 'ROLE_ADMIN'">
				AND mginfo.store_seq = #{storeSeq}
				AND mginfo.authority NOT IN ('ROLE_ADMIN')
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="searchWord != null and searchWord != ''">
			AND 
			(		mginfo.name LIKE CONCAT('%',#{searchWord},'%')
				OR 	mnggrp.group_name LIKE CONCAT('%',#{searchWord},'%')
			)
		</if>
		ORDER BY mginfo.store_seq DESC
	</select>
</mapper>
